// Generated by view binder compiler. Do not edit!
package com.singhealth.enhance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.singhealth.enhance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowBpRecordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText diaBPTIET;

  @NonNull
  public final ImageView removeRowIV;

  @NonNull
  public final ImageView swapValuesIV;

  @NonNull
  public final TextInputEditText sysBPTIET;

  private RowBpRecordBinding(@NonNull LinearLayout rootView, @NonNull TextInputEditText diaBPTIET,
      @NonNull ImageView removeRowIV, @NonNull ImageView swapValuesIV,
      @NonNull TextInputEditText sysBPTIET) {
    this.rootView = rootView;
    this.diaBPTIET = diaBPTIET;
    this.removeRowIV = removeRowIV;
    this.swapValuesIV = swapValuesIV;
    this.sysBPTIET = sysBPTIET;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowBpRecordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowBpRecordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_bp_record, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowBpRecordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.diaBPTIET;
      TextInputEditText diaBPTIET = ViewBindings.findChildViewById(rootView, id);
      if (diaBPTIET == null) {
        break missingId;
      }

      id = R.id.removeRowIV;
      ImageView removeRowIV = ViewBindings.findChildViewById(rootView, id);
      if (removeRowIV == null) {
        break missingId;
      }

      id = R.id.swapValuesIV;
      ImageView swapValuesIV = ViewBindings.findChildViewById(rootView, id);
      if (swapValuesIV == null) {
        break missingId;
      }

      id = R.id.sysBPTIET;
      TextInputEditText sysBPTIET = ViewBindings.findChildViewById(rootView, id);
      if (sysBPTIET == null) {
        break missingId;
      }

      return new RowBpRecordBinding((LinearLayout) rootView, diaBPTIET, removeRowIV, swapValuesIV,
          sysBPTIET);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
