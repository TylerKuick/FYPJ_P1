// Generated by view binder compiler. Do not edit!
package com.singhealth.enhance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.singhealth.enhance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetVerifyScanBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout continueBS;

  @NonNull
  public final LinearLayout discardBS;

  @NonNull
  public final LinearLayout rescanBS;

  private BottomSheetVerifyScanBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout continueBS, @NonNull LinearLayout discardBS,
      @NonNull LinearLayout rescanBS) {
    this.rootView = rootView;
    this.continueBS = continueBS;
    this.discardBS = discardBS;
    this.rescanBS = rescanBS;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetVerifyScanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetVerifyScanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_verify_scan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetVerifyScanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.continueBS;
      LinearLayout continueBS = ViewBindings.findChildViewById(rootView, id);
      if (continueBS == null) {
        break missingId;
      }

      id = R.id.discardBS;
      LinearLayout discardBS = ViewBindings.findChildViewById(rootView, id);
      if (discardBS == null) {
        break missingId;
      }

      id = R.id.rescanBS;
      LinearLayout rescanBS = ViewBindings.findChildViewById(rootView, id);
      if (rescanBS == null) {
        break missingId;
      }

      return new BottomSheetVerifyScanBinding((LinearLayout) rootView, continueBS, discardBS,
          rescanBS);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
